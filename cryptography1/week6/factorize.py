from gmpy2 import add, c_div, f_div, div, invert, isqrt, mpz, mul, powmod, sub
from string import split

N_1 = mpz(179769313486231590772930519078902473361797697894230657273430081157732675805505620686985379449212982959585501387537164015710139858647833778606925583497541085196591615128057575940752635007475935288710823649949940771895617054361149474865046711015101563940680527540071584560878577663743040086340742855278549092581)
N_2 = mpz(648455842808071669662824265346772278726343720706976263060439070378797308618081116462714015276061417569195587321840254520655424906719892428844841839353281972988531310511738648965962582821502504990264452100885281673303711142296421027840289307657458645233683357077834689715838646088239640236866252211790085787877)
N_3 = mpz(720062263747350425279564435525583738338084451473999841826653057981916355690188337790423408664187663938485175264994017897083524079135686877441155132015188279331812309091996246361896836573643119174094961348524639707885238799396839230364676670221627018353299443241192173812729276147530748597302192751375739387929)

C   = mpz(22096451867410381776306561134883418017410069787892831071731839143676135600120538004282329650473509424343946219751512256465839967942889460764542040581564748988013734864120452325229320176487916666402997509188729971690526083222067771600019329260870009579993724077458967773697817571267229951148662959627934791540)
E   = 65537

'''
N_1:
p = 13407807929942597099574024998205846127479365820592393377723561443721764030073662768891111614362326998675040546094339320838419523375986027530441562135724301 
q = 13407807929942597099574024998205846127479365820592393377723561443721764030073778560980348930557750569660049234002192590823085163940025485114449475265364281

N_2:
p = 25464796146996183438008816563973942229341454268524157846328581927885777969985222835143851073249573454107384461557193173304497244814071505790566593206419759
q = 25464796146996183438008816563973942229341454268524157846328581927885777970106398054491246526970814167632563509541784734741871379856682354747718346471375403

N_3:
p = 21909849592475533092273988531583955898982176093344929030099423584127212078126150044721102570957812665127475051465088833555993294644190955293613411658629209
q = 32864774388713299638410982797375933848473264140017393545149135376190818117189240035825816494954711821626076210364113848440012285863311027426121370050758081

C = 22096451867410381776306561134883418017410069787892831071731839143676135600120538004282329650473509424343946219751512256465839967942889460764542040581564748988013734864120452325229320176487916666402997509188729971690526083222067771600019329260870009579993724077458967773697817571267229951148662959627934791540
'''

def factorize(number, delta):
    for i in range(1, delta + 1):
        square_root     = isqrt(number)
        average         = square_root + i
        average_squared = mul(average, average)

        x = isqrt(average_squared - number)
        p = (average - x)
        q = (average + x)
        if mul(p, q) == number:
            return (p, q, i)
    return (0, 0, 0)

def rsa_decrypt(number, exponent, p, q, N):
    phi_N   = mul(p - 1, q - 1)
    inverse = invert(exponent, phi_N)
    decrypt = powmod(number, inverse, N)
    return split(hex(decrypt), '00')[1].decode('hex')



def main():
    print '\nFactorization Exercise.\n\n'
    p, q, i = factorize(N_1, 1)
    print '       1st:'
    print 'Iterations: ', i
    print '         p: ', p
    print '         q: ', q
    print ' Plaintext: ', rsa_decrypt(C, E, p, q, N_1)
    print '\n\n'

    p, q, i = factorize(N_2, 1048576)
    print '       2nd:'
    print 'Iterations: ', i
    print '         p: ', p
    print '         q: ', q
    print '\n\n'

    p, q, i = factorize(mul(N_3, 24), 1)
    print '       3rd:'
    print 'Iterations: ', i
    print '         p: ', div(p, 6)
    print '         q: ', div(q, 4)
    print '\n\n'
    

if __name__ == "__main__":
    main()

